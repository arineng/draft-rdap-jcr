;
; Override rules for strict RDAP checking.
;

;
; Object class response
;

@{root} $entity_response = {
    $response_mixin,
    $entity_mixin,
    @{not} $error_mixin,
    @{not} $search_results
}

@{root} $nameserver_response = {
    $response_mixin,
    $nameserver_mixin,
    @{not} $error_mixin,
    @{not} $search_results
}

@{root} $domain_response = {
    $response_mixin,
    $domain_mixin,
    @{not} $error_mixin,
    @{not} $search_results
}

@{root} $network_response = {
    $response_mixin,
    $network_mixin,
    @{not} $error_mixin,
    @{not} $search_results
}

@{root} $autnum_response = {
    $response_mixin,
    $autnum_mixin,
    @{not} $error_mixin,
    @{not} $search_results
}
;
; Help and error response
;

@{root} $error_response =  {
    $response_mixin,
    $error_mixin,
    @{not} $object_class,
    @{not} $search_results
}

@{root} $help_response = {
    $response_mixin,
    $lang ?,
    @{not} $error_mixin,
    @{not} $object_class,
    @{not} $search_results
}
;
; Search responses
;

@{root} $domainSearch_response = {
    $response_mixin,
    $lang ?,
    $domainSearchResult,
    @{not} $error_mixin,
    @{not} $object_class
}

@{root} $nameserverSearch_response = {
    $response_mixin,
    $lang ?,
    $nameserverSearchResult,
    @{not} $error_mixin,
    @{not} $object_class
}

@{root} $entitySearch_response = {
    $response_mixin,
    $lang ?,
    $entitySearchResult,
    @{not} $error_mixin,
    @{not} $object_class
}
;
; Object class mixins
;

$object_class = (
    $entity_mixin |
    $nameserver_mixin |
    $domain_mixin |
    $network_mixin |
    $autnum_mixin
)
;
; All search results
;

$search_results = (
    $domainSearchResult |
    $nameserverSearchResult |
    $entitySearchResult
)
;
; IANA Status Values
;

$status = "status" : [ $status_values * ]

$status_values = (
    "validated" |
    "renew prohibited" |
    "update prohibited" |
    "transfer prohibited" |
    "delete prohibited" |
    "proxy" |
    "private" |
    "removed" |
    "obscured" |
    "associated" |
    "active" |
    "inactive" |
    "locked" |
    "pending create" |
    "pending renew" |
    "pending transfer" |
    "pending update" |
    "pending delete" |
    "add period" |
    "auto renew period" |
    "client delete prohibited" |
    "client hold" |
    "client renew prohibited" |
    "client transfer prohibited" |
    "client update prohibited" |
    "pending restore" |
    "redemption period" |
    "renew period" |
    "server delete prohibited" |
    "server renew prohibited" |
    "server transfer prohibited" |
    "server update prohibited" |
    "server hold" |
    "transfer period"
)
;
; IANA Notice and Remark Types
;

$noticeRemarkType = "type" : $noticeRemarkType_values

$noticeRemarkType_values = (
    "result set truncated due to authorization" |
    "result set truncated due to excessive load" |
    "result set truncated due to unexplainable reasons" |
    "object truncated due to authorization" |
    "object truncated due to excessive load" |
    "object truncated due to unexplainable reasons"
)
;
; IANA Roles
;

$roles = "roles" : [ $role_values * ]

$role_values = (
    "registrant" |
    "technical" |
    "administrative" |
    "abuse" |
    "billing" |
    "registrar" |
    "reseller" |
    "sponsor" |
    "proxy" |
    "notifications" |
    "noc"
)

;
; IANA Domain Variant Relations
;

$variantRelation = "relation" : [ $variantRelation_values * ]

$variantRelation_values = (
    "registered" |
    "unregistered" |
    "registration restricted" |
    "open registration" |
    "conjoined"
)
;
; IANA Event Actions
;

$eventAction = "eventAction" : $eventAction_values

$eventAction_values = (
    "registration" |
    "reregistration" |
    "last changed" |
    "expiration" |
    "deletion" |
    "reinstantiation" |
    "transfer" |
    "locked" |
    "unlocked" |
    "last update of RDAP database" |
    "registrar expiration" |
    "enum validation expiration"
)

